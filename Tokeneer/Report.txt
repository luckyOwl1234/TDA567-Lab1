# Report.txt

We have an enrollmentStation, IDStation and token class.

EnrollmentStation

We decided to use 1-3 to indicate level of access and 0 to indicate if token is invalid. Because
of this a new token has as lowest a clearance of 1. Positive numbers i the shit, negative numbers is pain.
When we create a new token we ensure that its a fresh token.

Token

Handles the unique tokens by using fingerprints. Also stores clearance which can be invalidated if
someone else then the owner of the token tries to use it. Has a method that invalidates the token.

IDStation

When trying to open a door, the door has to be closed the alarm has to be off and the token used '
has to exist. There are three cases when trying to open the door:
1. Fingerprints match the token and clearance is correct, the door opens.
2. Fingerprints match the token but clearance it too low, the door doesnt open but no alarm sounds
   and the token remains valid.
3. Fingerprints doesnt match the token, the door doesnt open, the alarm activates and the token
   is invalidated.

## Implementation
* We originally planned to use a key/value map for fingerprint/token storage,
  but since token already contains the assigned fingerprint, and all
  fingerprints are unique, we chose a Set of fingerprints instead.

## Opening doors
* If an alarm is active, we assume that the offender shall not escape, and
  subsequently sound the alarm.
* If the clearance was not met, we assume that no alarm is required - alarms
  would be commonplace otherwise.
* Originally, we planned to allow invalid tokens to open some non-critical
  doors. Since the target is a high-security building, we altered our spec
  accordingly.
