// 2. Specifying a sorting algorithm

    predicate sorted(s: seq<int>)
    {
        forall j, k :: 0 <= j < k < |s| ==> s[j] <= s[k]
    }

    ghost method SortedSequence(s: seq<int>)
    

    predicate sortedTwo(s: seq<int>)
    {
        0 < |s| ==> (forall i :: 0 < i < |s| ==> s[0] <= s[i]) && sortedTwo(s[1..])
    }





    4a.
      sortArray(a : Array)
      requires a != null;


      ensures forall i : int :: 0 <= i < a.Length ==> a[i] <= a[i+1];